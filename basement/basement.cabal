name:                basement
version:             2017.07.31
synopsis:            Foundation scrap box of array & string
description:         Foundation most basic primitives without any dependencies
homepage:            https://github.com/haskell-foundation/foundation#readme
license:             BSD3
license-file:        LICENSE
copyright:           2015-2017 Vincent Hanquez <vincent@snarc.org>
                     2017      Foundation Maintainers
maintainer:          vincent@snarc.org
copyright:           Vincent Hanquez
category:            Web
build-type:          Simple
homepage:            https://github.com/haskell-foundation/foundation
bug-reports:         https://github.com/haskell-foundation/foundation/issues
cabal-version:       >=1.10
tested-with:         GHC==8.2.1, GHC==8.0.2, GHC==7.10.3
extra-source-files:  cbits/*.h

source-repository head
  type: git
  location: https://github.com/haskell-foundation/foundation.git

library
  hs-source-dirs:    .
  exposed-modules:   Basement.Error
                     Basement.Bounded
                     Basement.Base16
                     Basement.Bindings.Memory
                     Basement.Block.Base
                     Basement.Block.Mutable
                     Basement.BoxedArray
                     Basement.Endianness
                     Basement.Environment
                     Basement.Exception
                     Basement.From
                     Basement.Types
                     Basement.Types.Char7
                     Basement.Types.OffsetSize
                     Basement.Types.Ptr
                     Basement.Types.AsciiString
                     Basement.Block
                     Basement.Monad
                     Basement.MutableBuilder
                     Basement.Nat
                     Basement.NonEmpty
                     Basement.NormalForm
                     Basement.Numerical.Number
                     Basement.Numerical.Additive
                     Basement.Numerical.Subtractive
                     Basement.Numerical.Multiplicative
                     Basement.Utils
                     Basement.IntegralConv
                     Basement.Floating
                     Basement.FinalPtr
                     Basement.These
                     Basement.Show
                     Basement.UTF8.Table
                     Basement.UTF8.Helper
                     Basement.UTF8.Base
                     Basement.UTF8.BA
                     Basement.UTF8.Addr
                     Basement.UTF8.Types
                     Basement.String
                     Basement.String.BA
                     Basement.String.Addr
                     Basement.String.Encoding.Encoding
                     Basement.String.Encoding.UTF16
                     Basement.String.Encoding.UTF32
                     Basement.String.Encoding.ASCII7
                     Basement.String.Encoding.ISO_8859_1
                     Basement.UArray.Base
                     Basement.UArray.BA
                     Basement.UArray.Addr
                     Basement.UArray.Mutable
                     Basement.UArray
                     Basement.Runtime
                     Basement.Imports
                     Basement.Compat.Base
                     Basement.Compat.Bifunctor
                     Basement.Compat.CallStack
                     Basement.Compat.ExtList
                     Basement.Compat.IsList
                     Basement.Compat.Identity
                     Basement.Compat.Primitive
                     Basement.Compat.PrimTypes
                     Basement.Compat.MonadTrans
                     Basement.Compat.Natural
                     Basement.Compat.NumLiteral
                     Basement.Compat.Typeable
  if impl(ghc >= 8.0)
    exposed-modules: Basement.BlockN
  build-depends:       base >= 4.7 && < 5
                     , ghc-prim
  default-language:    Haskell2010
  default-extensions: NoImplicitPrelude
                      RebindableSyntax
                      TypeFamilies
                      BangPatterns
                      DeriveDataTypeable
  if (arch(i386) || arch(x86_64))
    cpp-options: -DARCH_IS_LITTLE_ENDIAN
  else
    cpp-options: -DARCH_IS_UNKNOWN_ENDIAN
  include-dirs:      cbits
  c-sources:         cbits/foundation_mem.c
                     cbits/foundation_rts.c
